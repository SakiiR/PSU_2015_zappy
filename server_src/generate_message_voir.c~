/*
** generate_message_voir.c for generate_message_voir in /home/aknin_k/rendu/tek2/reseau/zappy/PSU_2015_zappy/server_src
** 
** Made by Karine Aknin
** Login   <aknin_k@epitech.net>
** 
** Started on  Thu Jun 23 17:39:05 2016 Karine Aknin
** Last update Fri Jun 24 11:50:00 2016 Karine Aknin
*/

#include "server.h"

int		count_character(t_case *cases)
{
  int		i;
  t_character	*tmp;

  i = 0;
  tmp = cases->characters;
  while (tmp)
   {
     tmp = tmp->next_in_case;
     i++;
    }
  return (i);
}

int		count_ressources(t_case *cases)
{
  int		i;
  unsigned int	size;

  i = 0;
  size = 0;
  while (i < NUMBER_OF_TYPES)
    {
      size += cases->quantities[i];
      i++;
    }
  return (size);
}

int	count_elem(t_case **cases)
{
  int	size;
  int	i;

  size = 0;
  i = 0;
  while (cases[i])
    {
      size += count_character(cases[i]);
      size += count_ressources(cases[i]);
      i++;
    }
  size = size * 100;
  return (size);
}

int	generate_message_voir(t_client *client, t_case **cases)
{
  int	i;
  char	*message;
  int	size;
  int	it;

  i = 0;
  it = 0;
  printf("direction = %d\n", client->character->orientation);
  while (cases[i])
    {
      printf("case %d  x = %d  y = %d\n", i, cases[i]->x, cases[i]->y);
      i++;
    }
  printf("before count_elem\n");
  size = count_elem(cases);
  printf("after count_elem\n");
  if (!(message = malloc(sizeof(*message) * (size))))
    return (RETURN_FAILURE);
  bzero(message, size);
  i = 0;
  while (cases[i])
    {
      printf("inside boucle = before\n");
      it = write_elem_case(message, cases[i], client, it);
      printf("message after write_elem = %s\n", message);
      i++;
    }
  return (RETURN_SUCCESS);
}
